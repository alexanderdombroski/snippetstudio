name: Publish VS Code Extension

on:
  push:
    tags:
      - '*.*.*' # Trigger on tags like 1.0.0

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm ci

      - name: Test Coverage
        run: npm run coverage:publish
        env:
          GITHUB_TOKEN: ${{ secrets.OAUTH_APP_TOKEN }}

      - name: Publish Coverage
        run: |
          node .vitest/publishCoverage.mts
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth setup-git
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "bot: update readme code coverage" --no-verify || echo "No changes to commit"
          git push origin HEAD:main --no-verify

      - name: Compile extension
        run: npm run package

      - name: Package extension
        id: package
        run: |
          npx @vscode/vsce package
          echo "VSIX_PATH=$(ls *.vsix)" >> $GITHUB_ENV

      - name: Delete tag on publish prep failure
        if: failure()
        run: |
          TAG_REF=${GITHUB_REF#refs/tags/}
          git push origin :refs/tags/$TAG_REF --no-verify
          echo "Deployment failed. Deleted tag $TAG_REF"

      - name: Create GitHub Release
        id: create_release
        run: |
          curl -s https://raw.githubusercontent.com/alexanderdombroski/snippetstudio/main/CHANGELOG.md -o CHANGELOG.md  
          if [ $? -ne 0 ]; then
            echo "Failed to download CHANGELOG.md"
            exit 1
          fi

          # Use awk to extract the relevant section
          awk -v tag="${{ github.ref_name }}" '
            BEGIN { found=0; }
            /^## \['"${{ github.ref_name }}"'\]/ { found=1; next; }
            /^## \[/ { if (found==1) found=2; }
            { if (found==1) print; }
          ' CHANGELOG.md > release_notes.txt

          TREE_LINK="[Tree](https://github.com/${{ github.repository }}/tree/${{ github.ref_name }})"
          COMMIT_LINK="[Commits](https://github.com/${{ github.repository }}/commits/${{ github.ref_name }})"
          COMPARE_LINK="[Compare](https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 ${{ github.ref_name }}~1)...${{ github.ref_name }})"

          CHANGELOG="See the full [changelog](https://github.com/alexanderdombroski/snippetstudio/blob/main/CHANGELOG.md)."
          RELEASE_BODY=$(printf "%s\n\n%s\n\n## GitHub Links\n\n%s - %s - %s" "$(cat release_notes.txt)" "$CHANGELOG" "$TREE_LINK" "$COMMIT_LINK" "$COMPARE_LINK")

          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "$RELEASE_BODY"

          echo "RELEASE_ID=${{ github.ref_name }}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload .vsix to release
        run: |
          gh release upload $RELEASE_ID $VSIX_PATH \
            --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish extension to Open VSX Registry
        run: npx ovsx publish $VSIX_PATH -p $OPEN_VSX_MARKETPLACE_TOKEN
        env:
          OPEN_VSX_MARKETPLACE_TOKEN: ${{ secrets.OPEN_VSX_MARKETPLACE_TOKEN }}

      - name: Publish extension to VS Code Marketplace
        run: npx @vscode/vsce publish -p $VSCODE_MARKETPLACE_TOKEN
        env:
          VSCODE_MARKETPLACE_TOKEN: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
